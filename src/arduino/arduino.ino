#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define OLED_MOSI   7
#define OLED_CLK   6
#define OLED_DC    11
#define OLED_CS    12
#define OLED_RESET 8
Adafruit_SSD1306 display(OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);

char string[100];
int whatsappCount=0;
int gmailCount=0;
int count=0;
int connection=1;

int hr=0;
int mi=0;
int day=0;
int date=1;
int month=0;

int time;
int screen = 0;
int changing = 1;

static unsigned char PROGMEM whats[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x1F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x03,
0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xF8, 0x00,
0x00, 0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0xFF, 0xFF, 0xFF,
0xFF, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x03, 0xFF,
0xFF, 0xFF, 0xFF, 0xC0, 0x03, 0xFF, 0xFF, 0xF0, 0xFF, 0xE0, 0x07, 0xFF, 0xFF, 0xF0, 0x7F, 0xE0,
0x07, 0xFF, 0xFF, 0xE0, 0x3F, 0xE0, 0x0F, 0xFF, 0xFF, 0xE0, 0x3F, 0xF0, 0x0F, 0xFF, 0xFF, 0xE0,
0x3F, 0xF0, 0x0F, 0xFF, 0xFF, 0xC0, 0x3F, 0xF0, 0x0F, 0xFF, 0xFF, 0xE0, 0x3F, 0xF8, 0x0F, 0xFF,
0xFF, 0xF0, 0x3F, 0xF8, 0x0F, 0xFF, 0xFF, 0xF0, 0x3F, 0xF8, 0x0F, 0xFF, 0xFF, 0xE0, 0x7F, 0xF8,
0x0F, 0xFF, 0xFF, 0xC0, 0x7F, 0xF8, 0x0F, 0xFF, 0x8F, 0x80, 0xFF, 0xF8, 0x0F, 0xFE, 0x0F, 0x01,
0xFF, 0xF8, 0x0F, 0xFC, 0x00, 0x03, 0xFF, 0xF0, 0x0F, 0xFC, 0x00, 0x07, 0xFF, 0xF0, 0x0F, 0xFC,
0x00, 0x0F, 0xFF, 0xF0, 0x07, 0xFC, 0x00, 0x3F, 0xFF, 0xE0, 0x07, 0xFE, 0x00, 0xFF, 0xFF, 0xE0,
0x03, 0xFF, 0x87, 0xFF, 0xFF, 0xE0, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x01, 0xFF, 0xFF, 0xFF,
0xFF, 0xC0, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x7F,
0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xE0,
0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0xFF, 0xFF,
0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static unsigned char PROGMEM messg[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0,
0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF,
0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0x3F, 0xFF, 0xFF, 0xFC, 0xFF, 0xFF, 0x8F, 0xFF, 0xFF,
0xF1, 0xFF, 0xFF, 0xC3, 0xFF, 0xFF, 0xC7, 0xFF, 0xFF, 0xF0, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0xF8,
0x3F, 0xFC, 0x1F, 0xFF, 0xFF, 0xFC, 0x0F, 0xF0, 0x3F, 0xFF, 0xFF, 0xFF, 0x07, 0xE0, 0xFF, 0xFF,
0xFF, 0xFE, 0x01, 0x80, 0x7F, 0xFF, 0xFF, 0xFC, 0x20, 0x04, 0x3F, 0xFF, 0xFF, 0xF8, 0x70, 0x0E,
0x1F, 0xFF, 0xFF, 0xF0, 0xF8, 0x1F, 0x0F, 0xFF, 0xFF, 0xE3, 0xFE, 0x7F, 0xC7, 0xFF, 0xFF, 0xC7,
0xFF, 0xFF, 0xE3, 0xFF, 0xFF, 0x9F, 0xFF, 0xFF, 0xF9, 0xFF, 0xFF, 0x3F, 0xFF, 0xFF, 0xFC, 0xFF,
0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF,
0xFF, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC,
0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static unsigned char PROGMEM phon[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x78, 0x00, 0x00, 0x00, 0x00,
0x07, 0x78, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x78, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x78, 0x00, 0x00,
0x00, 0x00, 0x1F, 0x78, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x78, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x78,
0x00, 0x00, 0x00, 0x00, 0x7F, 0x78, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x78, 0x00, 0x00, 0x00, 0x00,
0x7F, 0x78, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x78, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00,
0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00,
0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00,
0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00,
0x00, 0x00, 0xFF, 0x78, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x78, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x78,
0x00, 0x00, 0x00, 0x00, 0x7F, 0x78, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x78, 0x00, 0x00, 0x00, 0x00,
0x3F, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x78, 0x00, 0x00,
0x00, 0x00, 0x0F, 0x78, 0x00, 0x00, 0x00, 0x00, 0x07, 0x78, 0x00, 0x00, 0x00, 0x00, 0x03, 0x78,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static unsigned char PROGMEM pg[] = {
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD,
0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xE7, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xF3, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xC3, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xF1, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xC3, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xF1, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xC3, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xF1, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xC3, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xF1, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xC3, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xF1, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xC3, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xF1, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xC3, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xF1, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xAF, 0xF3, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x3E, 0x07, 0xFC, 0x0F, 0xC0, 0x3F, 0x05,
0xAF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x3E, 0x07, 0xFC, 0x3F, 0xF0, 0xFF, 0xC5,
0xAF, 0xFF, 0xFE, 0x7F, 0x80, 0x7C, 0x3F, 0xCF, 0xFC, 0x3E, 0x07, 0xFC, 0x3F, 0xF8, 0xFF, 0xE5,
0xAF, 0xFF, 0xFC, 0x7F, 0xC1, 0xFF, 0x3F, 0xCF, 0xFC, 0x3E, 0x07, 0xFC, 0x7F, 0xF9, 0xFF, 0xE5,
0xAF, 0xFF, 0xFC, 0x7F, 0xE1, 0xFF, 0x3F, 0xCF, 0xFC, 0x3E, 0x07, 0xBC, 0x7C, 0xF9, 0xF3, 0xE5,
0xAF, 0xFF, 0xF8, 0x79, 0xE3, 0xC7, 0xBF, 0xCF, 0xFC, 0x3E, 0x0F, 0xBE, 0x7C, 0xF9, 0xF3, 0xE5,
0xAF, 0xFF, 0xE0, 0x79, 0xE3, 0xC7, 0xBF, 0xCF, 0xFC, 0x3E, 0x0F, 0xBE, 0x7C, 0xF9, 0xF3, 0xE5,
0xAF, 0xF0, 0x00, 0x79, 0xE3, 0xC7, 0xBF, 0xC3, 0xFC, 0x3E, 0x0F, 0xBE, 0x7F, 0x01, 0xFC, 0x05,
0xAF, 0xF0, 0x00, 0x79, 0xE3, 0xC7, 0xBF, 0xC3, 0xFC, 0x3E, 0x0F, 0xBE, 0x7F, 0x81, 0xFE, 0x05,
0xAF, 0xF0, 0x00, 0x7F, 0xE3, 0xC7, 0xBF, 0xC3, 0xFC, 0x3E, 0x0F, 0xBE, 0x3F, 0xC0, 0xFF, 0x05,
0xAF, 0xF0, 0x00, 0x7F, 0xC3, 0xC7, 0xBF, 0xC3, 0xFC, 0x3E, 0x0F, 0x1E, 0x1F, 0xF0, 0x7F, 0xC5,
0xAF, 0xF0, 0x00, 0x7F, 0x83, 0xC7, 0xBF, 0xC3, 0xFC, 0x3E, 0x0F, 0x1E, 0x0F, 0xF8, 0x3F, 0xE5,
0xAF, 0xF0, 0x00, 0x7F, 0xC3, 0xC7, 0xBF, 0xC3, 0xFC, 0x3E, 0x1F, 0x1F, 0x03, 0xF8, 0x0F, 0xE5,
0xAF, 0xF0, 0x00, 0x79, 0xE3, 0xC7, 0xBF, 0xC3, 0xFC, 0x3E, 0x1F, 0x1F, 0x01, 0xFC, 0x07, 0xF5,
0xAF, 0xF0, 0x00, 0x79, 0xE3, 0xC7, 0xBF, 0xC3, 0xFC, 0x3E, 0x1F, 0xFF, 0x7C, 0x7D, 0xF1, 0xF5,
0xAF, 0xF0, 0x00, 0x79, 0xE3, 0xC7, 0xBF, 0xC3, 0xFC, 0x3E, 0x1F, 0xFF, 0x7C, 0x7D, 0xF1, 0xF5,
0xAF, 0xF0, 0x00, 0x79, 0xE3, 0xC7, 0xBF, 0xE7, 0xFC, 0x3E, 0x1F, 0xFF, 0x7C, 0x7D, 0xF1, 0xF5,
0xAF, 0xF0, 0x00, 0x79, 0xE3, 0xC7, 0x9F, 0xFF, 0xFC, 0x3E, 0x1F, 0xFF, 0x7C, 0x7D, 0xF1, 0xF5,
0xAF, 0xF0, 0x00, 0x79, 0xE3, 0xC7, 0x9F, 0xFF, 0xFC, 0x3F, 0xFE, 0x0F, 0x7F, 0xFD, 0xFF, 0xF5,
0xAF, 0xF0, 0x00, 0x79, 0xE1, 0xFF, 0x0F, 0xFF, 0x7C, 0x3F, 0xFE, 0x0F, 0xBF, 0xF8, 0xFF, 0xE5,
0xAF, 0xF0, 0x00, 0x79, 0xE1, 0xFF, 0x07, 0xFF, 0x7C, 0x3F, 0xFE, 0x0F, 0x9F, 0xF8, 0x7F, 0xE5,
0xAF, 0xF0, 0x00, 0x79, 0xE0, 0x7C, 0x03, 0xFE, 0x7C, 0x3F, 0xFE, 0x0F, 0x8F, 0xE0, 0x3F, 0x85,
0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD,
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
};



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



void setup()   {                
  Serial.begin(9600);
  display.begin(SSD1306_SWITCHCAPVCC);
  display.display();
  delay(10);
  display.clearDisplay();
  pinMode(2,'INPUT');
  pinMode(3,'INPUT');
  pinMode(4,'INPUT');
  display.drawBitmap(0,16,pg,128,48,WHITE);
  display.display();
  delay(10);
}

void loop() { 

  while(connection==0)
  {
   if(changing==1)
    noConnection();
   changing=0;
   input(phon);
  }
  
  while(screen==0){
    if(changing==1)
     timer();
    changing=0;
    if(input(whats)==1)
    {
    }
  }
  
  while(screen==1){
    //serialReader();
    if(changing==1)
       whatsapp();
    changing=0;
    if(input(whats)==1)
    {
     whatsapp_clicked();
     changing=1;
    }
  }/*
    if(digitalRead(2)==1)
      {
        putText("MSG DUDE",1,0,16,WHITE);
        Serial.println("Was in IF");
      }
    Serial.println("Hi!");
    delay(100);
  }*/
  
  while(screen==2)
  {
    if(changing==1)
       message();
    changing=0;
    if(input(messg)==1)
    {
     message_clicked();
     changing=1;
    }
  }
  /*
  while(screen==3)
  {
    if(changing==1)
       phone();
    changing=0;
    if(input(phon)==1)
    {
     phone_clicked();
     changing=1;
    }
  }
  */
  if(screen>2)
   screen=0;
  if(screen<0)
   screen=2;
}

void whatsapp_clicked()
{
  
  int x=0,h=0;
  while(x<2500)
  {
   display.clearDisplay();
   display.drawBitmap(20,16-h,whats,48,48,1);
   display.fillRect(0,0,128,16,BLACK);
   x+=250;
   display.display();
   delay(25);
   h+=5;
  }
  while(1)
  {
   putText("MSG DUDE",1,0,16,WHITE);
    
   delay(50); 
   if(Serial.available())
   {
      char a= Serial.read();
      Serial.print(a);
      if(a=='e')
       break;
   }
     
     
     //display whatsapp details here
  }
}

void message_clicked()
{
}

void phone_clicked()
{
}

void transitionLeft(const uint8_t *bitmap)
{
   int w=115,h=20,x=0;
   while(x<2500)
   { 
     display.drawBitmap(h,16,bitmap,48,48,1);
    // display.fillRect(w,64,128,64,BLACK);
     display.display();
     delay(40);
     display.clearDisplay();
     w-=13;
     h-=13;
     x+=250;
   }
}

void transitionRight(const uint8_t *bitmap)
{
   int w=13,h=64,x=0;
   while(x<2500)
   { 
     display.drawBitmap(20+w,16,bitmap,48,48,1);
    // display.fillRect(0,0,w,h,BLACK);
     display.display();
     delay(40);
     display.clearDisplay();
     w+=13;
     x+=250;
   }
}

void noConnection()
{
  display.clearDisplay();
  delay(10);
  display.drawBitmap(20, 16,  phon, 48,48, 1);   
  display.display(); 
  
  char u[] = "No Connection.";
  
  putText(u,1,3,0,WHITE);
  putText("X",5,70,20,WHITE);
  billBoardScrollRight();
}

void timer()
{
  display.clearDisplay();
  delay(10);
  
  char u[10],v[10];
  
  if(hr<10)
  {
   u[0]='0';
   u[1]=hr+48;
  }
  else
  {
   u[0]=(hr%10)+48;
   u[1]=(hr/10)+48;
  }

  if(mi<10)
  {
   u[3]='0';
   u[4]=mi+48;
  }
  else
  {
   u[3]=(mi%10)+48;
   u[4]=(mi/10)+48;
  }  
  u[2]=':';
  u[5]='\0';
  
  putText(u,4,7,17,WHITE);
  /*
  if(day==0)
    putText("Monday",1,7,55,WHITE);
  if(day==1)
    putText("Tuesday",1,7,55,WHITE);
  if(day==2)
    putText("Wednesday",1,7,55,WHITE);
  if(day==3)
    putText("Thursday",1,7,55,WHITE);
  if(day==4)
    putText("Friday",1,7,55,WHITE);
  if(day==5)
    putText("Saturday",1,7,55,WHITE);
  if(day==6)
    putText("Sunday",1,7,55,WHITE);
  
  v[0]=date/10+48;
  v[1]=date%10+48;
  v[2]=',';
  v[3]=' ';
  v[4]='\0';
  putText(v,1,80,55,WHITE);

  if(month==0)
   putText("    Jan",1,80,55,WHITE); 
  if(month==1)
   putText("    Feb",1,80,55,WHITE);    
  if(month==2)
   putText("    Mar",1,80,55,WHITE); 
  if(month==3)
   putText("    Apr",1,80,55,WHITE); 
  if(month==5)
   putText("    Jun",1,80,55,WHITE); 
  if(month==6)
   putText("    Jul",1,80,55,WHITE);    
  if(month==7)
   putText("    Aug",1,80,55,WHITE); 
  if(month==8)
   putText("    Sep",1,80,55,WHITE); 
  if(month==9)
   putText("    Oct",1,80,55,WHITE); 
  if(month==10)
   putText("    Nov",1,80,55,WHITE);    
  if(month==11)
   putText("    Dec",1,80,55,WHITE); 
  if(month==4)
   putText("    May",1,80,55,WHITE); 
   /**/
}


void message()
{
  display.clearDisplay(); 
  delay(10);
  display.drawBitmap(20, 16,  messg, 48,48, 1);   
  display.display();
  
  //char u[] = "1 Whatsapp";
  char u[100];
  int k=0;
  int temp = gmailCount;
  if(temp>99)
   temp=99;
  if(temp==0)
  {
   u[0]='0';
   u[1]='\0';
  }
  else
  {
   int rev=0;
   while(temp!=0)
   {
     rev = rev*10;
     rev = rev + temp%10;
     temp = temp/10;
   }
   temp = rev;
   
   while(temp!=0)
   {
     u[k++]=(temp%10)+48;
     temp = temp/10;
     
   }
   u[k]='\0';
  }

if(gmailCount%10==0&&gmailCount>10)
   putText(" 0 new mails.",1,3,0,WHITE);
  else if(gmailCount>10&&gmailCount%10!=0)
   putText("   new mails.",1,3,0,WHITE);
  else
   putText("  new mails.",1,3,0,WHITE);
  
  putText(u,1,3,0,WHITE);
  
  if(gmailCount%10==0&&gmailCount>10)
   putText(" 0",4,75,25,WHITE);
  putText(u,4,75,25,WHITE);
  billBoardScrollRight();

}

void phone()
{
  display.clearDisplay();
  delay(10);
  display.drawBitmap(20, 16,  phon, 48,48, 1);   
  display.display(); 
  
  char u[] = "No missed calls";
  
  putText(u,1,3,0,WHITE);
  putText("7",5,70,20,WHITE);
  billBoardScrollRight();
}

void whatsapp()
{
  display.clearDisplay(); 
  delay(10);
  display.drawBitmap(20, 16,  whats, 48,48, 1);   
  display.display();
  
  //char u[] = "1 Whatsapp";
  char u[100];
  int k=0;
  int temp = whatsappCount;
  if(temp>99)
   temp=99;
  if(temp==0)
  {
   u[0]='0';
   u[1]='\0';
  }
  else
  {
   int rev=0;
   while(temp!=0)
   {
     rev = rev*10;
     rev = rev + temp%10;
     temp = temp/10;
   }
   temp = rev;
   
   while(temp!=0)
   {
     u[k++]=(temp%10)+48;
     temp = temp/10;
   }
   u[k]='\0';
  }
  
  if(whatsappCount%10==0&&whatsappCount>10)
   putText(" 0 new whatsapps.",1,3,0,WHITE);
  else if(whatsappCount>10&&whatsappCount%10!=0)
   putText("   new whatsapps.",1,3,0,WHITE);
  else
   putText("  new whatsapps.",1,3,0,WHITE);
  
  putText(u,1,3,0,WHITE);
  
  if(whatsappCount%10==0&&whatsappCount>10)
   putText(" 0",4,75,25,WHITE);
  putText(u,4,75,25,WHITE);
  billBoardScrollRight();

}

void putText(char *ch,int _size,int x,int y,int c)
{
  display.setTextSize(_size);
    display.setTextColor(c);
  display.setCursor(x,y);

  display.println(ch);
  display.display();
}

void billBoardScrollRight()
{
    display.startscrollright(0x00, 0x01);    
}

void entireScrollRight()
{
    display.startscrollright(0x00, 0x0F);    
}



int input(const uint8_t *bitmap)
{
  if(digitalRead(2)==1)
  {
   delay(100);
   Serial.println("next");
   screen++;
   changing=1;
   transitionRight(bitmap);
   return 2;    
  }  
  
  if(digitalRead(3)==1)
  {
   delay(100);
   Serial.println("prev");
   screen--;
   changing=1;
   transitionLeft(bitmap);
   return 3;  
  }    

  char i;
  if(Serial.available())
  {
    i = Serial.read();
    
    //Serial.println(i);
      string[count] = i;
      count++;

    if( i == ')')
    {
      for( int j = 0 ; string[j] != ')' ; j++)
      {
        Serial.print(string[j]);  
        //lcd.setCursor(j+1,0);
        //lcd.print(string[j]);
      }


      count = 0;
    
    int k=1;
    
    whatsappCount=0;
    while(string[k]!='#')
    {
     whatsappCount+= string[k]-48;
     if(string[k+1]!='#')
      whatsappCount *= 10;
     k++;
    }
    
    k++;
    gmailCount=0;
    while(string[k]!='#')
    {
     gmailCount+= string[k]-48;
     if(string[k+1]!='#')
      gmailCount *= 10;
     k++;
    }
    

    k++;
    hr=0;
    while(string[k]!='#')
    {
     hr+=string[k]-48;
     if(string[k+1]!='#')
      hr *= 10;
     k++;
    }
    
    k++;
    mi=0;
    while(string[k]!='#')
    {
     mi+=string[k]-48;
     if(string[k+1]!='#')
      mi *= 10;
     k++;
    }
   /* 
    int tC=0;
    //char tArray[100]; 
    k++;
    while(string[k]!='#')
    {
     //tArray[tC]=string[k];
     //ticker[tC]=string[k];
     tC++;
     k++;
    }
    //ticker[tC+1]='\0';
    k++;
 */  
    //delay(100);
    Serial.println(whatsappCount);
    Serial.println("whatsapps - ");
    Serial.println(gmailCount);
    Serial.println("gmails");
    Serial.println("\nhr");
    Serial.println(hr);
    Serial.println("min");
    Serial.println(mi);
    //Serial.println(ticker);
    if(hr>10)
    {
     int rev=0;
     while(hr!=0)
     {
      rev = rev*10;
      rev = rev + hr%10;
      hr = hr/10;
     }
    hr = rev;
    }

    if(mi>10)
    {
     int rev=0;
     while(mi!=0)
     {
      rev = rev*10;
      rev = rev + mi%10;
      mi = mi/10;
     }
    mi = rev;
    }
      
   
    changing=1;
    }
  }
  if(string[0]=='#'&&connection==0)
  {
    count=0;
    connection=1;
    changing=1;
    return 4;
  }
  if(connection==0)
   return 0;
  
  
  
  if(string[0]=='+')
  {
   string[0]=' ';
   count=0;
   screen++;
   changing=1;
   transitionRight(bitmap);
   return 2;
  }
  if(string[0]=='-')
  {
   string[0]=' ';    
   count=0;
   screen--;
   changing=1;
   transitionLeft(bitmap);
   return 3;
  }
  if(string[0]=='e')
  {
   string[0]=' ';    
   count=0;
   return 1;
  }  
  return 0;
}
